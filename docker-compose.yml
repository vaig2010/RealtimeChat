services:
  db:
    container_name: chat_db
    image: postgres:16.4-alpine3.20
    restart: always
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - 5432:5432

  app:
    container_name: chat
    build:
      context: ./
    environment:
      SECRET_KEY: ${SECRET_KEY}
      ENVIRONMENT: ${ENVIRONMENT}
      REDIS_HOST: redis
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS}
    restart: always
    ports:
      - 8000:8000
    volumes:
      - media:/app/media
    depends_on:
      - db

  redis:
    container_name: chat_redis
    image: redis:7.2
    ports:
      - "6379:6379"
    volumes:
      - redis:/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  nginx:
    image: nginx:alpine
    container_name: chat_nginx
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - media:/app/media  # Mount the media volume
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  # Use a custom Nginx config
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - app
  certbot:
    image: certbot/certbot
    container_name: certbot
    depends_on:
      - nginx
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --keep-until-expiring --email frankandshtein@gmail.com --agree-tos --no-eff-email -d rtchat.hopto.org

volumes:
  redis:
  media:
